/**
 * Parameters
 * startTimecode: int (unix timestamp milliseconds)
 * framesPerSecond: int (how often to trigger fake time. 25 frames per second is recommended)
 * shadowPlayer: boolean (shadow the player states so the fake timecode stops when the player stops
 * playing)
 */
export default function (EaseLive, config) {
	let timer;
	const framesPerSecond = config.framesPerSecond || 25;
	const timerInterval = Math.ceil(1000 / framesPerSecond);
	const startTimecode = config.startTimecode !== undefined ? config.startTimecode : Date.now();
	let fakeTimecode = startTimecode;
	const shadowPlayer = config.shadowPlayer || false;
	let useVideoPosition = false;

	function play() {
		// Setup a timer to trigger every fake frame
		let prev = Date.now();
		let now = prev;
		timer = setInterval(() => {
			now = Date.now();
			fakeTimecode += now - prev;
			EaseLive.emit('player.time', {
				timecode: fakeTimecode,
				fake: true,
			});
			prev = now;
		}, timerInterval);
	}

	function stop() {
		if (!timer) return;
		clearInterval(timer);
		timer = null;
	}

	function shadowPlayerStates() {
		EaseLive.on('player.state', (e) => {
			if (useVideoPosition) return;
			if (e.state === 'playing') {
				play();
			} else {
				stop();
			}
		});

		EaseLive.on('player.seek', (e) => {
			fakeTimecode = config.startTimecode + Math.floor(e.offset * 1000);
		});

		EaseLive.on('player.position', (e) => {
			useVideoPosition = true;
			stop();
			EaseLive.emit('player.time', {
				timecode: startTimecode + Math.floor(e.position * 1000),
				fake: true,
			});
		});
	}

	function overrideTimecodeEvent(e) {
		e.timecode = fakeTimecode;
	}

	function alignTimecodeEvent(e) {
		fakeTimecode = e.timecode;
	}

	// when using position, override the tc
	// when using interval, align the real timecode with the interpolation
	function onPlayerTime(e) {
		if (e.fake) {
			if (useVideoPosition) {
				fakeTimecode = e.timecode;
			}
			return;
		}
		if (useVideoPosition) {
			overrideTimecodeEvent(e);
		} else {
			alignTimecodeEvent(e);
		}
	}

	EaseLive.on('player.time', onPlayerTime);

	if (shadowPlayer) {
		shadowPlayerStates();
	}
}
