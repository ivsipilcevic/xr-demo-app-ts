function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var RestApi = /*#__PURE__*/function () {
  function RestApi() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, RestApi);

    this.hostname = options.accountId.indexOf('staging-') === 0 ? "".concat(options.accountId, ".dev.number60.tv") : "".concat(options.accountId, ".cloud.easelive.tv");
    this.baseUrl = "https://".concat(this.hostname, "/api/v1");
  }

  _createClass(RestApi, [{
    key: "getProject",
    value: function getProject(projectId, env) {
      var envParam = env && env !== 'prod' ? "?env=".concat(env) : '';
      var url = "".concat(this.baseUrl, "/projects/live/").concat(projectId).concat(envParam);
      return fetch(url).then(function (res) {
        return res.json();
      });
    }
  }, {
    key: "getProgram",
    value: function getProgram(programId) {
      var url = "".concat(this.baseUrl, "/programs/live/").concat(programId);
      return fetch(url).then(function (res) {
        return res.json();
      });
    }
  }]);

  return RestApi;
}();

export default RestApi;