import _omit from "lodash/omit";

var serialize = function serialize(obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k] === undefined ? obj[k] : "".concat(encodeURIComponent(k), "=").concat(encodeURIComponent(obj[k]));
  }).filter(function (v) {
    return v !== undefined;
  }).join('&');
};

export function createUrl(config) {
  if (!config.params) {
    return config.url;
  }

  var result = config.url;

  if (!result.match(/\?/)) {
    if (result.match(/\/$/) || result.match(/html?$/)) {
      result += '?';
    } else {
      result += '/?';
    }
  } else {
    result += '&';
  } // ignore params that are already in the url


  var urlKeys = (result.match(/[?&][^=]+/g) || []).map(function (k) {
    return k.slice(1);
  });
  return (result + serialize(_omit(config.params, urlKeys))).replace(/&$/, '');
}
export function getUrlQueryParam(url, param) {
  if (!url || url.length === 0 || url.indexOf('?') === -1 || !param || param.length === 0) {
    return null;
  }

  var urlSearchParams = new URLSearchParams(url.split('?')[1]);

  if (urlSearchParams.has(param)) {
    var value = urlSearchParams.get(param);

    if (value.length > 0) {
      return value;
    }
  }

  return null;
}